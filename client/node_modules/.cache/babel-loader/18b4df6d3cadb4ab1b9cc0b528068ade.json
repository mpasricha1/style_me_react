{"ast":null,"code":"import _objectSpread from \"/Users/estebanmendez/Desktop/style_me_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"/Users/estebanmendez/Desktop/style_me_react/client/src/components/LoginForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport UserContext from \"../../utils/UserContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm(props) {\n  _s();\n\n  var _this = this;\n\n  var _useContext = useContext(UserContext),\n      id = _useContext.id,\n      setId = _useContext.setId,\n      name = _useContext.name,\n      setName = _useContext.setName,\n      loggedIn = _useContext.loggedIn,\n      setLoggedIn = _useContext.setLoggedIn; // const history = useHistory();\n\n\n  var emailInput = useRef();\n  var passwordInput = useRef();\n  console.log(loggedIn);\n  console.log(history);\n  var extraProps = {};\n\n  if (props.className) {\n    extraProps.className = props.className;\n  }\n\n  var emailId = props.className ? props.className + \"-login-email\" : \"login-email\";\n  var emailHelpId = props.className ? props.className + \"-login-email-help\" : \"login-email-help\";\n  var passwordId = props.className ? props.className + \"-login-password\" : \"login-password\";\n\n  var handleSubmit = function handleSubmit(event) {\n    // if the user hits enter or hits the button, this function will fire\n    event.preventDefault();\n    console.log(\"submit happened\");\n    console.log({\n      email: emailInput.current.value,\n      password: passwordInput.current.value\n    });\n    API.login({\n      email: emailInput.current.value,\n      password: passwordInput.current.value\n    }).then(function (data) {\n      console.log(data.data);\n      setId(data.data.id);\n      setName(data.data.full_name);\n      setLoggedIn(true); // history.push(\"/\");\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: function () {\n      if (!loggedIn) {\n        return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({}, extraProps), {}, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-floating mb-3 input_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: emailInput,\n              type: \"email\",\n              id: emailId,\n              \"aria-describedby\": emailHelpId,\n              className: \"inputBox\",\n              placeholder: \"Email\",\n              name: \"email\",\n              required: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n              id: emailHelpId,\n              className: \"email-help-text form-text text-muted\",\n              children: \"We'll never share your email with anyone else.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: passwordInput,\n              type: \"password\",\n              id: passwordId,\n              className: \"inputBox\",\n              placeholder: \"Password\",\n              name: \"password\",\n              required: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"landing_btn_container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: handleSubmit,\n              className: \"btn btn-outline-secondary signmeUpBtn\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/auth/google\",\n            className: \"btn btn-outline-secondary signmeUpBtn\",\n            role: \"button\",\n            children: \"Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, _this)]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, _this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\\"\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 18\n        }, _this);\n      }\n    }()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"7LWTqkeOlNfGZ9kVbMlx0GhBdiA=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/estebanmendez/Desktop/style_me_react/client/src/components/LoginForm/index.js"],"names":["React","Fragment","useContext","useRef","Link","API","UserContext","useHistory","LoginForm","props","id","setId","name","setName","loggedIn","setLoggedIn","emailInput","passwordInput","console","log","history","extraProps","className","emailId","emailHelpId","passwordId","handleSubmit","event","preventDefault","email","current","value","password","login","then","data","full_name","catch","err"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,MAAtC,QAAoD,OAApD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAAA;;AACxB,oBAA4DP,UAAU,CAACI,WAAD,CAAtE;AAAA,MAAQI,EAAR,eAAQA,EAAR;AAAA,MAAYC,KAAZ,eAAYA,KAAZ;AAAA,MAAmBC,IAAnB,eAAmBA,IAAnB;AAAA,MAAyBC,OAAzB,eAAyBA,OAAzB;AAAA,MAAkCC,QAAlC,eAAkCA,QAAlC;AAAA,MAA4CC,WAA5C,eAA4CA,WAA5C,CADwB,CAExB;;;AACA,MAAMC,UAAU,GAAGb,MAAM,EAAzB;AACA,MAAMc,aAAa,GAAGd,MAAM,EAA5B;AAEAe,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AAEA,MAAIC,UAAU,GAAG,EAAjB;;AACA,MAAIZ,KAAK,CAACa,SAAV,EAAqB;AACnBD,IAAAA,UAAU,CAACC,SAAX,GAAuBb,KAAK,CAACa,SAA7B;AACD;;AACD,MAAIC,OAAO,GAAGd,KAAK,CAACa,SAAN,GACVb,KAAK,CAACa,SAAN,GAAkB,cADR,GAEV,aAFJ;AAGA,MAAIE,WAAW,GAAGf,KAAK,CAACa,SAAN,GACdb,KAAK,CAACa,SAAN,GAAkB,mBADJ,GAEd,kBAFJ;AAGA,MAAIG,UAAU,GAAGhB,KAAK,CAACa,SAAN,GACbb,KAAK,CAACa,SAAN,GAAkB,iBADL,GAEb,gBAFJ;;AAIA,MAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B;AACCA,IAAAA,KAAK,CAACC,cAAN;AACDV,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY;AACVU,MAAAA,KAAK,EAAEb,UAAU,CAACc,OAAX,CAAmBC,KADhB;AAEVC,MAAAA,QAAQ,EAAEf,aAAa,CAACa,OAAd,CAAsBC;AAFtB,KAAZ;AAKA1B,IAAAA,GAAG,CAAC4B,KAAJ,CAAU;AACRJ,MAAAA,KAAK,EAAEb,UAAU,CAACc,OAAX,CAAmBC,KADlB;AAERC,MAAAA,QAAQ,EAAEf,aAAa,CAACa,OAAd,CAAsBC;AAFxB,KAAV,EAIGG,IAJH,CAIQ,UAAAC,IAAI,EAAI;AACZjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAI,CAACA,IAAjB;AAEAxB,MAAAA,KAAK,CAACwB,IAAI,CAACA,IAAL,CAAUzB,EAAX,CAAL;AACAG,MAAAA,OAAO,CAACsB,IAAI,CAACA,IAAL,CAAUC,SAAX,CAAP;AACArB,MAAAA,WAAW,CAAC,IAAD,CAAX,CALY,CAMZ;AACD,KAXH,EAYGsB,KAZH,CAYS,UAACC,GAAD,EAAS;AACdpB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACD,KAdH;AAeD,GAxBD;;AAyBA,sBACE,QAAC,QAAD;AAAA,cACI,YAAM;AACN,UAAI,CAACxB,QAAL,EAAe;AACb,4BACE,gDAAUO,UAAV;AAAsB,UAAA,QAAQ,EAAEK,YAAhC;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,gCAAf;AAAA,oCACE;AACE,cAAA,GAAG,EAAEV,UADP;AAEE,cAAA,IAAI,EAAC,OAFP;AAGE,cAAA,EAAE,EAAEO,OAHN;AAIE,kCAAkBC,WAJpB;AAKE,cAAA,SAAS,EAAC,UALZ;AAME,cAAA,WAAW,EAAC,OANd;AAOE,cAAA,IAAI,EAAC,OAPP;AAQE,cAAA,QAAQ,EAAC;AARX;AAAA;AAAA;AAAA;AAAA,qBADF,eAWE;AACE,cAAA,EAAE,EAAEA,WADN;AAEE,cAAA,SAAS,EAAC,sCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXF,eAkBE;AACE,cAAA,GAAG,EAAEP,aADP;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,EAAE,EAAEQ,UAHN;AAIE,cAAA,SAAS,EAAC,UAJZ;AAKE,cAAA,WAAW,EAAC,UALd;AAME,cAAA,IAAI,EAAC,UANP;AAOE,cAAA,QAAQ,EAAC;AAPX;AAAA;AAAA;AAAA;AAAA,qBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eA6BE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,OAAO,EAAEC,YAFX;AAGE,cAAA,SAAS,EAAC,uCAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBA7BF,eAuCE,QAAC,IAAD;AACE,YAAA,EAAE,EAAC,cADL;AAEE,YAAA,SAAS,EAAC,uCAFZ;AAGE,YAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF;AAiDD,OAlDD,MAkDO;AACL,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;AACF,KAtDA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA2DD;;GA3GQlB,S;;KAAAA,S;AA6GT,eAAeA,SAAf","sourcesContent":["import React, { Fragment, useContext, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport UserContext from \"../../utils/UserContext\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction LoginForm(props) {\n  const { id, setId, name, setName, loggedIn, setLoggedIn } = useContext(UserContext);\n  // const history = useHistory();\n  const emailInput = useRef();\n  const passwordInput = useRef();\n\n  console.log(loggedIn)\n  console.log(history)\n\n  let extraProps = {};\n  if (props.className) {\n    extraProps.className = props.className;\n  }\n  let emailId = props.className\n    ? props.className + \"-login-email\"\n    : \"login-email\";\n  let emailHelpId = props.className\n    ? props.className + \"-login-email-help\"\n    : \"login-email-help\";\n  let passwordId = props.className\n    ? props.className + \"-login-password\"\n    : \"login-password\";\n\n  const handleSubmit = (event) => {\n    // if the user hits enter or hits the button, this function will fire\n     event.preventDefault();\n    console.log(\"submit happened\");\n    console.log({\n      email: emailInput.current.value,\n      password: passwordInput.current.value,\n    });\n\n    API.login({\n      email: emailInput.current.value,\n      password: passwordInput.current.value,\n    })\n      .then(data => {\n        console.log(data.data);\n\n        setId(data.data.id);\n        setName(data.data.full_name);\n        setLoggedIn(true);\n        // history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <Fragment>\n      {(() => {\n        if (!loggedIn) {\n          return (\n            <form {...extraProps} onSubmit={handleSubmit}>\n              <div className=\"form-floating mb-3 input_field\">\n                <input\n                  ref={emailInput}\n                  type=\"email\"\n                  id={emailId}\n                  aria-describedby={emailHelpId}\n                  className=\"inputBox\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  required=\"\"\n                />\n                <small\n                  id={emailHelpId}\n                  className=\"email-help-text form-text text-muted\"\n                >\n                  We'll never share your email with anyone else.\n                </small>\n\n                <input\n                  ref={passwordInput}\n                  type=\"password\"\n                  id={passwordId}\n                  className=\"inputBox\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  required=\"\"\n                />\n              </div>\n              <div className=\"landing_btn_container\">\n                <button\n                  type=\"submit\"\n                  onClick={handleSubmit}\n                  className=\"btn btn-outline-secondary signmeUpBtn\"\n                >\n                  Login\n                </button>\n              </div>\n\n              <Link\n                to=\"/auth/google\"\n                className=\"btn btn-outline-secondary signmeUpBtn\"\n                role=\"button\"\n              >\n                Google\n              </Link>\n            </form>\n          );\n        } else {\n          return <h3>\"\"</h3>;\n        }\n      })()}\n    </Fragment>\n  );\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}