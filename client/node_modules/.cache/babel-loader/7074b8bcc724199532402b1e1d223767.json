{"ast":null,"code":"import _regeneratorRuntime from \"/Users/estebanmendez/Desktop/style_me_react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/estebanmendez/Desktop/style_me_react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/estebanmendez/Desktop/style_me_react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/estebanmendez/Desktop/style_me_react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/estebanmendez/Desktop/style_me_react/client/src/pages/new_item.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport CloudinaryButton from \"../components/Cloudinary_Button\";\nimport ImagePlaceholder from \"../components/Image_placeholder\";\nimport { Input, LabelForInput } from \"../components/Form\";\nimport { ReusableBtn } from \"../components/Buttons\";\nimport { Select, Options } from \"../components/DropdownLists\";\nimport PlaceholderGray2 from \"../images/PlaceholderGray2.png\";\nimport Footer from \"../components/Footer\";\nimport { CloudinaryContext, Image } from \"cloudinary-react\";\nimport { openUploadWidget } from \"../utils/CloudinaryService\";\nimport API from \"../utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction New_item() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      images = _useState2[0],\n      setImages = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      itemName = _useState4[0],\n      setItemName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      url = _useState6[0],\n      setUrl = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      thumbnailUrl = _useState8[0],\n      setThumbnailUrl = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      type = _useState10[0],\n      setType = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      prediction = _useState12[0],\n      setPrediction = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      categories = _useState14[0],\n      setCategories = _useState14[1];\n\n  useEffect(function () {\n    loadCategories();\n  }, {});\n\n  function loadCategories() {\n    API.getCategories().then(function (res) {\n      console.log(res);\n      console.log(res.data);\n      setCategories(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  console.log(categories);\n\n  var beginUpload = function beginUpload(tag) {\n    var uploadOptions = {\n      cloudName: \"dnx8v0ryu\",\n      tags: [tag],\n      uploadPreset: \"qvqp5qcx\"\n    };\n    openUploadWidget(uploadOptions, /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(error, photos) {\n        var _prediction;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (error) {\n                  _context.next = 12;\n                  break;\n                }\n\n                if (!(photos.event === \"success\")) {\n                  _context.next = 10;\n                  break;\n                }\n\n                setImages([].concat(_toConsumableArray(images), [photos.info.public_id])); //console.log(\"URL\", photos.info.url);\n                //console.log(\"THUMBNAIL_URL\", photos.info.thumbnail_url);\n\n                _context.next = 5;\n                return API.getPrediction(photos.info.url);\n\n              case 5:\n                _prediction = _context.sent;\n                console.log(_prediction.data.type);\n                setUrl(photos.info.url);\n                setThumbnailUrl(photos.info.thumbnail_url);\n                setType(_prediction.data.type);\n\n              case 10:\n                _context.next = 13;\n                break;\n\n              case 12:\n                console.log(error);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }; // Handles updating component state when the user types into the input field\n\n\n  function handleInputChange(event) {\n    var value = event.target.value; // console.log(value);\n\n    setItemName(value);\n  } // If setPrediction is true, then keep the returned setType\n  // if setPrediction is false, then grab the value of an option\n  //  inside the dropdownlist and return that value as\n  //  the new setType.\n\n\n  function categoryType(event) {\n    event.preventDefault();\n\n    if (event.target.innerHTML === \"YES\") {\n      prediction = true;\n      console.log(prediction);\n      document.querySelector(\".questionToTheUser\").style.display = \"\";\n      document.querySelector(\".predictionBtn\").style.borderStyle = \"solid\";\n      setPrediction(prediction);\n    } else if (event.target.innerHTML === \"NO\") {\n      prediction = false;\n      console.log(prediction);\n      setPrediction(prediction);\n      document.querySelector(\".questionToTheUser\").style.display = \"none\";\n      document.querySelector(\".predictionBtn\").style.borderStyle = \"none\";\n    }\n  } // handles the category options the user chooses from the dropdown list\n\n\n  function handleDropdownOptions(event) {\n    var selectCategory = event.target.value;\n    console.log(selectCategory);\n    setType(selectCategory);\n  } // When the item name is submitted, use the API.saveItem method to save the item data\n\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(url, thumbnailUrl, type, prediction, itemName);\n    API.saveItem({\n      url: url,\n      thumbnail: thumbnailUrl,\n      type: type,\n      prediction: prediction,\n      itemName: itemName\n    }).then(function (res) {\n      return console.log(res);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CloudinaryContext, {\n      cloudName: \"dnx8v0ryu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topButtons\",\n          children: [/*#__PURE__*/_jsxDEV(ReusableBtn, {\n            to: \"/catalogs\",\n            className: \"seeCatalogsBtn btn btn-outline-secondary\",\n            children: \"See Catalogs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReusableBtn, {\n            to: \"/buildoutfit\",\n            className: \"buildoutfitBtn btn btn-outline-secondary\",\n            children: \"Build Outfit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloudinaryButton, {\n          onClick: function onClick() {\n            return beginUpload(\"image\");\n          },\n          className: \"upload_widget\",\n          children: \"Add New Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"15px\",\n            marginBottom: \"20px\"\n          },\n          children: images.length <= 0 ? /*#__PURE__*/_jsxDEV(ImagePlaceholder, {\n            className: \"img\",\n            src: PlaceholderGray2,\n            style: {\n              maxWidth: \"60%\",\n              maxHeight: \"60%\"\n            },\n            alt: \"placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"predictionBtn\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"questionToTheUser\",\n                children: [\"Category: **\", type, \"**\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this), \"Would you like to keep this category?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn truePredictionBtn\",\n                onClick: categoryType,\n                children: \"YES\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn falsePredictionBtn\",\n                onClick: categoryType,\n                children: \"NO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), prediction === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(LabelForInput, {\n                style: {\n                  textDecoration: \"none\",\n                  color: \"#6c757d\",\n                  fontSize: \"20px\",\n                  marginRight: \"10px\"\n                },\n                children: \"Choose a category:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                className: \"dropdownList\",\n                style: {\n                  marginBottom: \"30px\"\n                },\n                onChange: handleDropdownOptions,\n                children: categories.map(function (category) {\n                  return /*#__PURE__*/_jsxDEV(\"options\", {\n                    value: category,\n                    children: category\n                  }, category.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 25\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"section\", {\n              children: images.map(function (i) {\n                return /*#__PURE__*/_jsxDEV(Image, {\n                  publicId: i,\n                  \"fetch-format\": \"auto\",\n                  quality: \"auto\",\n                  style: {\n                    height: \"60%\",\n                    width: \"60%\"\n                  }\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputItemName\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            onChange: handleInputChange,\n            id: \"item_name\",\n            className: \"itemName\",\n            name: \"Item_name\",\n            placeholder: \"Item Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReusableBtn, {\n          id: \"addToCollection_Btn\",\n          className: \"addToCollectionBtn reusableBtn\",\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: \"Add To Collection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(New_item, \"9X7mKr5gmGqFVj6m+OPhq0TklG0=\");\n\n_c = New_item;\nexport default New_item;\n\nvar _c;\n\n$RefreshReg$(_c, \"New_item\");","map":{"version":3,"sources":["/Users/estebanmendez/Desktop/style_me_react/client/src/pages/new_item.js"],"names":["React","useEffect","useState","Header","CloudinaryButton","ImagePlaceholder","Input","LabelForInput","ReusableBtn","Select","Options","PlaceholderGray2","Footer","CloudinaryContext","Image","openUploadWidget","API","New_item","images","setImages","itemName","setItemName","url","setUrl","thumbnailUrl","setThumbnailUrl","type","setType","prediction","setPrediction","categories","setCategories","loadCategories","getCategories","then","res","console","log","data","catch","err","beginUpload","tag","uploadOptions","cloudName","tags","uploadPreset","error","photos","event","info","public_id","getPrediction","thumbnail_url","handleInputChange","value","target","categoryType","preventDefault","innerHTML","document","querySelector","style","display","borderStyle","handleDropdownOptions","selectCategory","handleSubmit","saveItem","thumbnail","marginTop","marginBottom","length","maxWidth","maxHeight","textDecoration","color","fontSize","marginRight","map","category","id","i","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport CloudinaryButton from \"../components/Cloudinary_Button\";\nimport ImagePlaceholder from \"../components/Image_placeholder\";\nimport { Input, LabelForInput } from \"../components/Form\";\nimport { ReusableBtn } from \"../components/Buttons\";\nimport { Select, Options } from \"../components/DropdownLists\";\nimport PlaceholderGray2 from \"../images/PlaceholderGray2.png\";\nimport Footer from \"../components/Footer\";\nimport { CloudinaryContext, Image } from \"cloudinary-react\";\nimport { openUploadWidget } from \"../utils/CloudinaryService\";\nimport API from \"../utils/API\";\n\nfunction New_item() {\n  const [images, setImages] = useState([]);\n  const [itemName, setItemName] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [thumbnailUrl, setThumbnailUrl] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  let [prediction, setPrediction] = useState(true);\n  const [categories, setCategories] = useState({});\n\n  useEffect(() => {\n    loadCategories();\n  }, {});\n\n  function loadCategories() {\n    API.getCategories()\n      .then((res) => {\n        console.log(res);\n        console.log(res.data);\n        setCategories(res.data);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  console.log(categories)\n\n  const beginUpload = (tag) => {\n    const uploadOptions = {\n      cloudName: \"dnx8v0ryu\",\n      tags: [tag],\n      uploadPreset: \"qvqp5qcx\",\n    };\n\n    openUploadWidget(uploadOptions, async (error, photos) => {\n      if (!error) {\n        // console.log(photos);\n        if (photos.event === \"success\") {\n          setImages([...images, photos.info.public_id]);\n          //console.log(\"URL\", photos.info.url);\n          //console.log(\"THUMBNAIL_URL\", photos.info.thumbnail_url);\n          let prediction = await API.getPrediction(photos.info.url);\n          console.log(prediction.data.type);\n          setUrl(photos.info.url);\n          setThumbnailUrl(photos.info.thumbnail_url);\n          setType(prediction.data.type);\n        }\n      } else {\n        console.log(error);\n      }\n    });\n  };\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { value } = event.target;\n    // console.log(value);\n    setItemName(value);\n  }\n\n  // If setPrediction is true, then keep the returned setType\n  // if setPrediction is false, then grab the value of an option\n  //  inside the dropdownlist and return that value as\n  //  the new setType.\n  function categoryType(event) {\n    event.preventDefault();\n    if (event.target.innerHTML === \"YES\") {\n      prediction = true;\n      console.log(prediction);\n      document.querySelector(\".questionToTheUser\").style.display = \"\";\n      document.querySelector(\".predictionBtn\").style.borderStyle = \"solid\";\n      setPrediction(prediction);\n    } else if (event.target.innerHTML === \"NO\") {\n      prediction = false;\n      console.log(prediction);\n      setPrediction(prediction);\n      document.querySelector(\".questionToTheUser\").style.display = \"none\";\n      document.querySelector(\".predictionBtn\").style.borderStyle = \"none\";\n    }\n  }\n\n  // handles the category options the user chooses from the dropdown list\n  function handleDropdownOptions(event) {\n    let selectCategory = event.target.value;\n    console.log(selectCategory);\n    setType(selectCategory);\n  }\n\n  // When the item name is submitted, use the API.saveItem method to save the item data\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(url, thumbnailUrl, type, prediction, itemName);\n    API.saveItem({\n      url,\n      thumbnail: thumbnailUrl,\n      type,\n      prediction,\n      itemName,\n    })\n      .then((res) => console.log(res))\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <>\n      <CloudinaryContext cloudName=\"dnx8v0ryu\">\n        <div className=\"App\">\n          <Header />\n          <div className=\"topButtons\">\n            <ReusableBtn\n              to=\"/catalogs\"\n              className=\"seeCatalogsBtn btn btn-outline-secondary\"\n            >\n              See Catalogs\n            </ReusableBtn>\n            <ReusableBtn\n              to=\"/buildoutfit\"\n              className=\"buildoutfitBtn btn btn-outline-secondary\"\n            >\n              Build Outfit\n            </ReusableBtn>\n          </div>\n          <CloudinaryButton\n            onClick={() => beginUpload(\"image\")}\n            className=\"upload_widget\"\n          >\n            Add New Item\n          </CloudinaryButton>\n          <div style={{ marginTop: \"15px\", marginBottom: \"20px\" }}>\n            {images.length <= 0 ? (\n              <ImagePlaceholder\n                className=\"img\"\n                src={PlaceholderGray2}\n                style={{ maxWidth: \"60%\", maxHeight: \"60%\" }}\n                alt=\"placeholder\"\n              />\n            ) : (\n              <>\n                <div className=\"predictionBtn\">\n                  <p className=\"questionToTheUser\">\n                    Category: **{type}\n                    **\n                    <br />\n                    Would you like to keep this category?\n                  </p>\n\n                  <button\n                    className=\"btn truePredictionBtn\"\n                    onClick={categoryType}\n                  >\n                    YES\n                  </button>\n\n                  <button\n                    className=\"btn falsePredictionBtn\"\n                    onClick={categoryType}\n                  >\n                    NO\n                  </button>\n                </div>\n\n                {prediction === false && (\n                  <>\n                    <LabelForInput\n                      style={{\n                        textDecoration: \"none\",\n                        color: \"#6c757d\",\n                        fontSize: \"20px\",\n                        marginRight: \"10px\",\n                      }}\n                    >\n                      Choose a category:\n                    </LabelForInput>\n                    <Select\n                      className=\"dropdownList\"\n                      style={{ marginBottom: \"30px\" }}\n                      onChange={handleDropdownOptions}\n                    >\n                      {/* ======= should render all categories ====== */}\n                      {categories.map((category) => (\n                        <options key={category.id} value={category}>{category}</options>\n                      ))}\n\n                      {/* ====================================== */}\n\n                      {/* <Options>Tops</Options>\n                      <Options>Jeans</Options>\n                      <Options>Dress</Options>\n                      <Options>Pants</Options>\n                      <Options>Shoes</Options>\n                      <Options>Handbags</Options>\n                      <Options>Accesories</Options>\n                      <Options>Skirt</Options>\n                      <Options>Shorts</Options> */}\n                    </Select>\n                  </>\n                )}\n\n                <section>\n                  {images.map((i) => (\n                    <Image\n                      key={i}\n                      publicId={i}\n                      fetch-format=\"auto\"\n                      quality=\"auto\"\n                      style={{ height: \"60%\", width: \"60%\" }}\n                    />\n                  ))}\n                </section>\n              </>\n            )}\n          </div>\n\n          <div className=\"inputItemName\">\n            <Input\n              onChange={handleInputChange}\n              id=\"item_name\"\n              className=\"itemName\"\n              name=\"Item_name\"\n              placeholder=\"Item Name\"\n            />\n            {/* <LabelForInput htmlFor=\"item_name\" /> */}\n          </div>\n          <ReusableBtn\n            id=\"addToCollection_Btn\"\n            className=\"addToCollectionBtn reusableBtn\"\n            type=\"submit\"\n            onClick={handleSubmit}\n          >\n            Add To Collection\n          </ReusableBtn>\n\n          <Footer />\n        </div>\n      </CloudinaryContext>\n    </>\n  );\n}\n\nexport default New_item;\n"]},"metadata":{},"sourceType":"module"}