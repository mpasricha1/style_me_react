[{"/Users/jennifermendez/Desktop/styleMeReact/client/src/index.js":"1","/Users/jennifermendez/Desktop/styleMeReact/client/src/reportWebVitals.js":"2","/Users/jennifermendez/Desktop/styleMeReact/client/src/App.js":"3","/Users/jennifermendez/Desktop/styleMeReact/client/src/pages/home.js":"4","/Users/jennifermendez/Desktop/styleMeReact/client/src/pages/signup.js":"5","/Users/jennifermendez/Desktop/styleMeReact/client/src/pages/login.js":"6","/Users/jennifermendez/Desktop/styleMeReact/client/src/pages/new_item.js":"7","/Users/jennifermendez/Desktop/styleMeReact/client/src/pages/catalogs.js":"8","/Users/jennifermendez/Desktop/styleMeReact/client/src/pages/build_outfit.js":"9","/Users/jennifermendez/Desktop/styleMeReact/client/src/pages/social.js":"10","/Users/jennifermendez/Desktop/styleMeReact/client/src/utils/API.js":"11","/Users/jennifermendez/Desktop/styleMeReact/client/src/utils/CloudinaryService.js":"12","/Users/jennifermendez/Desktop/styleMeReact/client/src/utils/UserContext.js":"13","/Users/jennifermendez/Desktop/styleMeReact/client/src/components/Banner/index.js":"14","/Users/jennifermendez/Desktop/styleMeReact/client/src/components/Cloudinary_Button/index.js":"15","/Users/jennifermendez/Desktop/styleMeReact/client/src/components/Form/index.js":"16","/Users/jennifermendez/Desktop/styleMeReact/client/src/components/Buttons/index.js":"17","/Users/jennifermendez/Desktop/styleMeReact/client/src/components/Footer/index.js":"18","/Users/jennifermendez/Desktop/styleMeReact/client/src/components/Header/index.js":"19","/Users/jennifermendez/Desktop/styleMeReact/client/src/components/HomeImages/index.js":"20","/Users/jennifermendez/Desktop/styleMeReact/client/src/components/Image_placeholder/index.js":"21","/Users/jennifermendez/Desktop/styleMeReact/client/src/components/DropdownLists/index.js":"22","/Users/jennifermendez/Desktop/styleMeReact/client/src/components/ulElements/index.js":"23"},{"size":547,"mtime":1621561319777,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1621561319776,"results":"26","hashOfConfig":"25"},{"size":1090,"mtime":1621561319471,"results":"27","hashOfConfig":"25"},{"size":741,"mtime":1621561319569,"results":"28","hashOfConfig":"25"},{"size":2973,"mtime":1621561319570,"results":"29","hashOfConfig":"25"},{"size":2102,"mtime":1621561319569,"results":"30","hashOfConfig":"25"},{"size":7920,"mtime":1621561319569,"results":"31","hashOfConfig":"25"},{"size":2912,"mtime":1621698687093,"results":"32","hashOfConfig":"25"},{"size":1555,"mtime":1621731140286,"results":"33","hashOfConfig":"25"},{"size":6075,"mtime":1621562389267,"results":"34","hashOfConfig":"25"},{"size":666,"mtime":1621561319571,"results":"35","hashOfConfig":"25"},{"size":832,"mtime":1621561319775,"results":"36","hashOfConfig":"25"},{"size":219,"mtime":1621561319572,"results":"37","hashOfConfig":"25"},{"size":867,"mtime":1621561319842,"results":"38","hashOfConfig":"25"},{"size":394,"mtime":1621561319841,"results":"39","hashOfConfig":"25"},{"size":380,"mtime":1621723069367,"results":"40","hashOfConfig":"25"},{"size":754,"mtime":1621561701374,"results":"41","hashOfConfig":"25"},{"size":402,"mtime":1621561319841,"results":"42","hashOfConfig":"25"},{"size":255,"mtime":1621561319840,"results":"43","hashOfConfig":"25"},{"size":2640,"mtime":1621561319840,"results":"44","hashOfConfig":"25"},{"size":482,"mtime":1621561319475,"results":"45","hashOfConfig":"25"},{"size":209,"mtime":1621561319473,"results":"46","hashOfConfig":"25"},{"size":436,"mtime":1621561319478,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"dsgxjl",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/jennifermendez/Desktop/styleMeReact/client/src/index.js",[],["99","100"],"/Users/jennifermendez/Desktop/styleMeReact/client/src/reportWebVitals.js",[],"/Users/jennifermendez/Desktop/styleMeReact/client/src/App.js",[],"/Users/jennifermendez/Desktop/styleMeReact/client/src/pages/home.js",[],"/Users/jennifermendez/Desktop/styleMeReact/client/src/pages/signup.js",["101"],"import React, { useContext, useRef } from \"react\";\nimport Header from \"../components/Header\";\nimport { Image } from \"../components/Form\";\nimport { Buttons } from \"../components/Buttons\";\nimport GenericImage from \"../images/styleMe.png\";\nimport Footer from \"../components/Footer\";\nimport \"../styles/styles.css\";\nimport UserContext from \"../utils/UserContext\";\nimport API from \"../utils/API\";\n\nfunction Signup() {\n  // **************** TEST ****************\n  const { id, setId, name, setName, loggedIn, setLoggedIn } =\n    useContext(UserContext);\n  const firstNameInput = useRef();\n  const lastNameInput = useRef();\n  const emailInput = useRef();\n  const passwordInput = useRef();\n\n  const handleSubmit = (event) => {\n    // if the user hits enter or hits the button, this function will fire\n    event.preventDefault();\n    console.log({\n      name: firstNameInput.current.value + \" \" + lastNameInput.current.value,\n      email: emailInput.current.value,\n      password: passwordInput.current.value,\n    });\n    \n    API.testUserRouter({\n      name: firstNameInput.current.value + \" \" + lastNameInput.current.value,\n      email: emailInput.current.value,\n      password: passwordInput.current.value,\n    })\n      .then((data) => {\n        console.log(data);\n        setId(id);\n        setName(name);\n        setLoggedIn(true);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // **************** - * -  ****************\n  return (\n    <>\n      <Header />\n      <Image src={GenericImage} alt=\"Style Me\" className=\"style_me_logo\" />\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-floating mb-3 input_field\">\n          <input\n            ref={firstNameInput}\n            type=\"text\"\n            id=\"first_name\"\n            className=\"inputBox firstInputBox\"\n            placeholder=\"First Name\"\n            name=\"first_name\"\n            required=\"\"\n          />\n\n          <input\n            ref={lastNameInput}\n            type=\"text\"\n            id=\"last_name\"\n            className=\"inputBox\"\n            placeholder=\"Last Name\"\n            name=\"last_name\"\n            required=\"\"\n          />\n\n          <input\n            ref={emailInput}\n            type=\"email\"\n            id=\"email\"\n            className=\"inputBox\"\n            placeholder=\"Email\"\n            name=\"email\"\n            required=\"\"\n          />\n\n          <input\n            ref={passwordInput}\n            type=\"password\"\n            id=\"password\"\n            className=\"inputBox\"\n            placeholder=\"Password\"\n            name=\"password\"\n            required=\"\"\n          />\n        </div>\n        <div className=\"landing_btn_container\">\n          <button\n            type=\"submit\"\n            onClick={handleSubmit}\n            className=\"btn btn-outline-secondary signmeUpBtn\"\n          >\n            Sign Me Up\n          </button>\n        </div>\n\n        <Buttons to=\"/home\">Cancel</Buttons>\n      </form>\n      <Footer />\n    </>\n  );\n}\n\nexport default Signup;\n","/Users/jennifermendez/Desktop/styleMeReact/client/src/pages/login.js",["102"],"import React, { useContext, useRef} from \"react\";\nimport Header from \"../components/Header\";\nimport { Image } from \"../components/Form\";\nimport { Buttons } from \"../components/Buttons\";\nimport GenericImage from \"../images/styleMe.png\";\nimport Footer from \"../components/Footer\";\nimport \"../styles/styles.css\";\nimport API from \"../utils/API\";\n\nfunction Login() {\n\n   // **************** TEST ****************\n  //  const { id, setId, name, setName, loggedIn, setLoggedIn } =\n  //  useContext(UserContext);\n const emailInput = useRef();\n const passwordInput = useRef();\n\n const handleSubmit = (event) => {\n   // if the user hits enter or hits the button, this function will fire\n   event.preventDefault();\n   console.log({\n     email: emailInput.current.value,\n     password: passwordInput.current.value,\n   });\n   \n   API.testUserRouter({\n     email: emailInput.current.value,\n     password: passwordInput.current.value,\n   })\n     .then((data) => {\n       console.log(data);\n       \n     })\n     .catch((err) => console.log(err));\n };\n  return (\n    <>\n      <Header />\n      <Image src={GenericImage} alt=\"Style Me\" className=\"style_me_logo\" />\n\n      <form>\n        <div className=\"form-floating mb-3 input_field\">\n        <input\n            ref={emailInput}\n            type=\"email\"\n            id=\"email\"\n            className=\"inputBox\"\n            placeholder=\"Email\"\n            name=\"email\"\n            required=\"\"\n          />\n\n          <input\n            ref={passwordInput}\n            type=\"password\"\n            id=\"password\"\n            className=\"inputBox\"\n            placeholder=\"Password\"\n            name=\"password\"\n            required=\"\"\n          />\n        </div>\n\n        <div className=\"landing_btn_container\">\n          <button\n            type=\"submit\"\n            onClick={handleSubmit}\n            className=\"btn btn-outline-secondary signmeUpBtn\"\n          >\n            Login\n          </button>\n        </div>\n        <Buttons>Google</Buttons>\n        {/* <Buttons to = \"/home\">Cancel</Buttons> */}\n      </form>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default Login;\n","/Users/jennifermendez/Desktop/styleMeReact/client/src/pages/new_item.js",["103"],"import React, { useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport CloudinaryButton from \"../components/Cloudinary_Button\";\nimport ImagePlaceholder from \"../components/Image_placeholder\";\nimport { Input, LabelForInput } from \"../components/Form\";\nimport { ReusableBtn } from \"../components/Buttons\";\nimport { Select, Options } from \"../components/DropdownLists\";\nimport PlaceholderGray2 from \"../images/PlaceholderGray2.png\";\nimport Footer from \"../components/Footer\";\nimport { CloudinaryContext, Image } from \"cloudinary-react\";\nimport { openUploadWidget } from \"../utils/CloudinaryService\";\nimport API from \"../utils/API\";\n\nfunction New_item() {\n  const [images, setImages] = useState([]);\n  const [itemName, setItemName] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [thumbnailUrl, setThumbnailUrl] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  let [prediction, setPrediction] = useState(true);\n  const[categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    loadCategories()\n  }, [])\n\n  function loadCategories() {\n    API.getCategories()\n      .then(res => { \n        console.log(res)\n        console.log(res.data)\n        setCategories(res.data)\n      }\n      )\n      .catch(err => console.log(err));\n  };\n\n  const beginUpload = (tag) => {\n    const uploadOptions = {\n      cloudName: \"dnx8v0ryu\",\n      tags: [tag],\n      uploadPreset: \"qvqp5qcx\",\n    };\n\n    openUploadWidget(uploadOptions, async (error, photos) => {\n      if (!error) {\n        // console.log(photos);\n        if (photos.event === \"success\") {\n          setImages([...images, photos.info.public_id]);\n          //console.log(\"URL\", photos.info.url);\n          //console.log(\"THUMBNAIL_URL\", photos.info.thumbnail_url);\n          let prediction = await API.getPrediction(photos.info.url);\n          console.log(prediction.data.type);\n          setUrl(photos.info.url);\n          setThumbnailUrl(photos.info.thumbnail_url);\n          setType(prediction.data.type);\n        }\n      } else {\n        console.log(error);\n      }\n    });\n  };\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { value } = event.target;\n    // console.log(value);\n    setItemName(value);\n  }\n\n  // If setPrediction is true, then keep the returned setType\n  // if setPrediction is false, then grab the value of an option\n  //  inside the dropdownlist and return that value as\n  //  the new setType.\n  function categoryType(event) {\n    event.preventDefault();\n    if (event.target.innerHTML === \"YES\") {\n      prediction = true;\n      console.log(prediction);\n      document.querySelector(\".questionToTheUser\").style.display = \"\";\n      document.querySelector(\".predictionBtn\").style.borderStyle = \"solid\";\n      setPrediction(prediction);\n    } else if (event.target.innerHTML === \"NO\") {\n      prediction = false;\n      console.log(prediction);\n      setPrediction(prediction);\n      document.querySelector(\".questionToTheUser\").style.display = \"none\";\n      document.querySelector(\".predictionBtn\").style.borderStyle = \"none\";\n    }\n  }\n\n  // handles the category options the user chooses from the dropdown list\n  function handleDropdownOptions(event) {\n    let selectCategory = event.target.value;\n    console.log(selectCategory);\n    setType(selectCategory);\n\n  }\n\n  // When the item name is submitted, use the API.saveItem method to save the item data\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(url, thumbnailUrl, type, prediction, itemName);\n    API.saveItem({\n      url,\n      thumbnail: thumbnailUrl,\n      type,\n      prediction,\n      itemName,\n    })\n      .then((res) => console.log(res))\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <>\n      <CloudinaryContext cloudName=\"dnx8v0ryu\">\n        <div className=\"App\">\n          <Header />\n          <div className=\"topButtons\">\n            <ReusableBtn\n              to=\"/catalogs\"\n              className=\"seeCatalogsBtn btn btn-outline-secondary\"\n            >\n              See Catalogs\n            </ReusableBtn>\n            <ReusableBtn\n              to=\"/buildoutfit\"\n              className=\"buildoutfitBtn btn btn-outline-secondary\"\n            >\n              Build Outfit\n            </ReusableBtn>\n          </div>\n          <CloudinaryButton\n            onClick={() => beginUpload(\"image\")}\n            className=\"upload_widget\"\n          >\n            Add New Item\n          </CloudinaryButton>\n          <div style={{ marginTop: \"15px\", marginBottom: \"20px\" }}>\n            {images.length <= 0 ? (\n              <ImagePlaceholder\n                className=\"img\"\n                src={PlaceholderGray2}\n                style={{ maxWidth: \"60%\", maxHeight: \"60%\" }}\n                alt=\"placeholder\"\n              />\n            ) : (\n              <>\n                <div className=\"predictionBtn\">\n                  <p className=\"questionToTheUser\">\n                    Category: **{type}\n                    **\n                    <br />\n                    Would you like to keep this category?\n                  </p>\n\n                  <button\n                    className=\"btn truePredictionBtn\"\n                    // onClick={() => setPrediction(true)}\n                    onClick={categoryType}\n                  >\n                    YES\n                  </button>\n\n                  <button\n                    className=\"btn falsePredictionBtn\"\n                    // onClick={() => setPrediction(false)}\n                    onClick={categoryType}\n                  >\n                    NO\n                  </button>\n                </div>\n\n                {prediction === false && (\n                  <>\n                    <LabelForInput\n                      style={{\n                        textDecoration: \"none\",\n                        color: \"#6c757d\",\n                        fontSize: \"20px\",\n                        marginRight: \"10px\",\n                      }}\n                    >\n                      Choose a category:\n                    </LabelForInput>\n                    <Select\n                      className=\"dropdownList\"\n                      style={{ marginBottom: \"30px\" }}\n                      onChange={handleDropdownOptions}\n                    >\n                      <Options>Tops</Options>\n                      <Options>Jeans</Options>\n                      <Options>Dress</Options>\n                      <Options>Pants</Options>\n                      <Options>Shoes</Options>\n                      <Options>Handbags</Options>\n                      <Options>Accesories</Options>\n                      <Options>Skirt</Options>\n                      <Options>Shorts</Options>\n                    </Select>\n                  </>\n                )}\n\n                <section>\n                  {images.map((i) => (\n                    <Image\n                      key={i}\n                      publicId={i}\n                      fetch-format=\"auto\"\n                      quality=\"auto\"\n                      style={{ height: \"60%\", width: \"60%\" }}\n                    />\n                  ))}\n                </section>\n              </>\n            )}\n          </div>\n\n          <div className=\"inputItemName\">\n            <Input\n              onChange={handleInputChange}\n              id=\"item_name\"\n              className=\"itemName\"\n              name=\"Item_name\"\n              placeholder=\"Item Name\"\n            />\n            {/* <LabelForInput htmlFor=\"item_name\" /> */}\n          </div>\n          <ReusableBtn\n            id=\"addToCollection_Btn\"\n            className=\"addToCollectionBtn reusableBtn\"\n            type=\"submit\"\n            onClick={handleSubmit}\n          >\n            Add To Collection\n          </ReusableBtn>\n\n          <Footer />\n        </div>\n      </CloudinaryContext>\n    </>\n  );\n}\n\nexport default New_item;\n","/Users/jennifermendez/Desktop/styleMeReact/client/src/pages/catalogs.js",[],"/Users/jennifermendez/Desktop/styleMeReact/client/src/pages/build_outfit.js",[],"/Users/jennifermendez/Desktop/styleMeReact/client/src/pages/social.js",[],"/Users/jennifermendez/Desktop/styleMeReact/client/src/utils/API.js",["104"],"import axios from \"axios\";\n// import { fetchPhotos } from \"./CloudinaryService\";\n\nexport default {\n  getPrediction: function (url) {\n    console.log(\"URL\", url);\n\n    return axios\n      .post(\"http://3.141.18.55/api/predict\", { url: url })\n      .then((data) => data)\n      .catch((err) => console.log(err));\n  },\n// Saves new item data\n  saveItem: function (data) {\n    console.log(data);\n    return axios.post(\"/api/item\", data);\n  },\n \n  // Testing for login and signup\n  testUserRouter: function(userData){\n    return axios.post(console.log(userData));\n  },\n\n  // Gets all categories\n  getCategories: function() {\n    return axios.get(\"/api/category\");\n  },\n\n};\n","/Users/jennifermendez/Desktop/styleMeReact/client/src/utils/CloudinaryService.js",[],"/Users/jennifermendez/Desktop/styleMeReact/client/src/utils/UserContext.js",[],"/Users/jennifermendez/Desktop/styleMeReact/client/src/components/Banner/index.js",[],"/Users/jennifermendez/Desktop/styleMeReact/client/src/components/Cloudinary_Button/index.js",[],"/Users/jennifermendez/Desktop/styleMeReact/client/src/components/Form/index.js",[],"/Users/jennifermendez/Desktop/styleMeReact/client/src/components/Buttons/index.js",[],"/Users/jennifermendez/Desktop/styleMeReact/client/src/components/Footer/index.js",[],"/Users/jennifermendez/Desktop/styleMeReact/client/src/components/Header/index.js",[],"/Users/jennifermendez/Desktop/styleMeReact/client/src/components/HomeImages/index.js",[],"/Users/jennifermendez/Desktop/styleMeReact/client/src/components/Image_placeholder/index.js",[],"/Users/jennifermendez/Desktop/styleMeReact/client/src/components/DropdownLists/index.js",[],"/Users/jennifermendez/Desktop/styleMeReact/client/src/components/ulElements/index.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":13,"column":37,"nodeType":"111","messageId":"112","endLine":13,"endColumn":45},{"ruleId":"109","severity":1,"message":"113","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":27},{"ruleId":"109","severity":1,"message":"114","line":21,"column":9,"nodeType":"111","messageId":"112","endLine":21,"endColumn":19},{"ruleId":"115","severity":1,"message":"116","line":4,"column":1,"nodeType":"117","endLine":29,"endColumn":3},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'loggedIn' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'categories' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]